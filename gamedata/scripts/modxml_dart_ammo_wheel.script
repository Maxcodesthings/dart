DART.AMMO_WHEEL = {}


local path  = "ui\\ui_wheel_ammo%s.xml"
local log   = DART.createLogger("AMMO_WHEEL")
local cache = DART.createCache("AMMO_WHEEL")


-- the wheels are easy to handle, every element just needs their
-- 'x' and 'width' scaled for aspect ratio, <wheel> is the only
-- exception since it needs to be centered
function parseDXML(DXML, xmlAspectRatio)
  local factor = DART.getAspectRatio() / xmlAspectRatio
  local scale  = DART.createScaleFunction(DXML, factor)

  local wheel, background, texture, all, alt, extended, result, ammo =
    DXML:query("wheel")[1],
    DXML:query("wheel > background")[1],
    DXML:query("wheel > background > texture")[1],
    DXML:query("wheel > all")[1],
    DXML:query("wheel > alt")[1],
    DXML:query("wheel > extended")[1],
    DXML:query("wheel > result")[1],
    DXML:query("ammo")[1]

  -- keep wheel centered after resize
  if wheel then
    DART.editAttributes(DXML, wheel, function(attrs)
      local newWidth = attrs.width / factor
      return {
        width = newWidth,
        x = attrs.x + (attrs.width - newWidth) / 2
      }
    end)
  end

  if background then
    scale(background, "width", "x")
  end

  if extended then
    scale(extended, "width", "x")
  end

  if result then
    scale(result, "width", "x")
  end

  -- set round wheel texture
  if texture and DART.AMMO_WHEEL.useRoundWheel then
    DXML:setText(texture, "ui_hud2_wheel_companion")
  end

  -- icons inside <all>
  if all then
    DXML:iterateChildren(all, function(child)
      if DXML:isElement(child) then
        scale(child, "width", "x")
      end
    end)
  end

  -- icons inside <alt>
  if alt then
    DXML:iterateChildren(alt, function(child)
      if DXML:isElement(child) then
        scale(child, "width", "x")
      end
    end)
  end

  -- ammo box details
  if ammo then
    DXML:iterateChildren(ammo, function(child)
      if DXML:isElement(child) then
        scale(child, "width", "x")
      end
    end)
  end
end


function onXMLRead(filename, DXML)
  local postfix = DART.checkFilename(filename, path)

  if not postfix then
    return
  end

  -- force ui_wheel_ammo_16.xml
  if postfix == "_43" then
    log("Replacing ui_wheel_ammo.xml with ui_wheel_ammo_16.xml")
    return DART.replaceDXML(DXML, string.format(path, "_16"))
  end

  if cache.has(filename) then
    return cache.apply(filename, DXML)
  end

  log("Parsing " .. filename)

  parseDXML(DXML, DART.aspectRatioLookup[postfix])
  cache.set(filename, DXML)
end


function on_xml_read()
  if DART.getAspectRatioVs16x9() > 1 then
    RegisterScriptCallback("on_xml_read", onXMLRead)
  else
    log("Disabled because aspect ratio is not ultrawide")
  end
end
