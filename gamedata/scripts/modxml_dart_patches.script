-- the default size is a little too small1
DART.PATCHES = { size = 36 }


local path  = "ui\\ui_patches%s.xml"
local log   = DART.createLogger("PATCHES")
local cache = DART.createCache("PATCHES")


-- scale only faction patches, other elements in this file like
-- 'name' and 'rank' are contolled by mcm
function resizePatch(DXML, element, xmlAspectRatio)
  local factor = DART.getAspectRatio() / xmlAspectRatio

  if
    not DXML:isElement(element)
    or not DXML:getElementName(element):match([[^patch_]])
  then
    return
  end

  -- fallback to XML width if no config value
  local size = DART.PATCHES.size ~= nil
    and DART.PATCHES.size
    or DXML:getElementAttr(element).height

  if size then
    DXML:setElementAttr(element, {
      width  = size / factor,
      height = size,
    })
  end
end


function parseDXML(DXML, xmlAspectRatio)
  DXML:iterateChildren(DXML:getRoot(), function(child)
    if DXML:isElement(child) then
      resizePatch(DXML, child, xmlAspectRatio)
    end
  end)
end


function onXMLRead(filename, DXML)
  local postfix = DART.checkFilename(filename, path)

  if not postfix then
    return
  end

  if cache.has(filename) then
    return cache.apply(filename, DXML)
  end

  log("Parsing " .. filename)

  parseDXML(DXML, DART.aspectRatioLookup[postfix])
  cache.set(filename, DXML)
end


function on_xml_read()
  if DART.getAspectRatioVs16x9() > 1 then
    RegisterScriptCallback("on_xml_read", onXMLRead)
  else
    log("Disabled because aspect ratio is not ultrawide")
  end
end
